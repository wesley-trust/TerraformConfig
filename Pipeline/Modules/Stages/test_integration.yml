stages:
- stage: Integration
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  
  - job: Test
    continueOnError: false
    steps:
    
    # Sign in to Azure
    #- task: PowerShell@2
    #  displayName: Authenticate with Azure
    #  env:
    #      TENANTID: ($TenantId)
    #      SERVICEPRINCIPALID: $(ServicePrincipalId)
    #      SERVICEPRINCIPALKEY: $(ServicePrincipalKey)
    #      SUBSCRIPTIONID: $(SubscriptionId)
    #  inputs:
    #    targetType: 'inline'
    #    script: |
    #        az login --service-principal -t $env:TENANTID -u $env:SERVICEPRINCIPALID -p $env:SERVICEPRINCIPALKEY
    #        az account set -s $env:SUBSCRIPTIONID
    #    pwsh: true

    # Install Terraform
    - task: TerraformInstaller@0
      displayName: 'Terraform Install'
      inputs:
        terraformVersion: 'latest'

    # Install Go
    - task: GoTool@0
      displayName: 'Go Install'
      inputs:
        version: 'latest'

    # Create test module
    - task: Go@0
      displayName: 'Create test module'  
      inputs:
        command: 'custom'
        customCommand: 'mod'
        arguments: 'init $(Module)'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Modules/Deployments/$(Module)/tests'

    # Add module dependencies
    - task: Go@0
      displayName: 'Get test dependencies'
      inputs:
        command: 'custom'
        customCommand: 'mod'
        arguments: 'tidy'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Modules/Deployments/$(Module)/tests'
        
    # Run Go Test
    - task: Go@0
      displayName: 'Run tests'
      inputs:
        command: 'test'
        arguments: '-v integration_test.go'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Modules/Deployments/$(Module)/tests'
      env:
          ARM_TENANT_ID: $(TenantId)
          ARM_CLIENT_ID: $(ServicePrincipalId)
          ARM_CLIENT_SECRET: $(ServicePrincipalKey)
          ARM_SUBSCRIPTION_ID: $(SubscriptionId)