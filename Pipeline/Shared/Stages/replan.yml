stages:
- stage: RePlan
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: Apply
  condition: and(succeeded('Plan'), eq(dependencies.Plan.outputs['Evaluate.Variable.ShouldRun'], 'true'))
  jobs:
  - job: Delay
    pool: Server
    steps:
    - task: Delay@1
      displayName: 'Delay for $(DelayMinutes) minutes'
      inputs:
        delayForMinutes: '$(DelayMinutes)'
  - job: ReEvaluate
    dependsOn: Delay
    continueOnError: true
    steps:
    - task: TerraformInstaller@0
      displayName: 'Terraform Install'
      inputs:
        terraformVersion: '$(terraformVersion)'
    - task: TerraformCLI@0
      displayName: 'Terraform Initialise'
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/$(Service)/'
        backendType: 'azurerm'
        backendServiceArm: '$(backendServiceArm)'
        ensureBackend: true
        backendAzureRmResourceGroupName: '$(backendAzureRmResourceGroupName)'
        backendAzureRmResourceGroupLocation: '$(backendAzureRmResourceGroupLocation)'
        backendAzureRmStorageAccountName: '$(backendAzureRmStorageAccountName)'
        backendAzureRmContainerName: '$(backendAzureRmContainerName)'
        backendAzureRmKey: '$(backendAzureRmKey)'
    - bash: |
          mkdir -p $(Pipeline.Workspace)/Output
      name: 'Directory'
      displayName: 'Create artifact directory'
    - task: TerraformCLI@0
      name: 'Plan'
      displayName: 'Terraform Plan'
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/$(Service)/'
        environmentServiceName: '$(backendServiceArm)'
        publishPlanResults: 'reapply_terraform.tfplan'
        commandOptions: '-out=$(Pipeline.Workspace)/Output/reapply_terraform.tfplan -detailed-exitcode'
    - bash: |
        if [ "$TERRAFORM_PLAN_HAS_CHANGES" = true ] ; then
          echo "##vso[task.setvariable variable=ShouldRun;isOutput=true]true"
          fi
      name: 'Variable'
      displayName: 'Set variable'
    - task: PublishPipelineArtifact@1
      displayName: 'Publish plan artifact'
      inputs:
        targetPath: '$(Pipeline.Workspace)/Output'
        artifact: 'ReEvaluate'
        publishLocation: 'pipeline'