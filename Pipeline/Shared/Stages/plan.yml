stages:

- stage: Plan
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: Validate
  jobs:
  
  - job: Evaluate
    continueOnError: false
    steps:
    
    # Terraform bootstrap
    - template: ../Steps/bootstrap.yml

    # Select workspace
    - template: ../Steps/workspace.yml
  
    # Create artifact directory
    - template: ../Steps/mkdir.yml
    
    # Terraform Plan
    - template: ../Steps/terraform.yml
      parameters:
        name: 'Plan'
        displayName: 'Terraform Plan'
        condition: succeeded()
        command: 'plan'
        publishPlanResults: 'apply_terraform.tfplan'
        commandOptions: '-out=$(Pipeline.Workspace)/Output/apply_terraform.tfplan -detailed-exitcode'
    
    # Regula steps
    - template: ../Steps/regula.yml

    # Scan Terraform Plan with Regula
    - bash: |
        # Set working directory
        cd $(System.DefaultWorkingDirectory)/$(Service)/
        # Generate JSON plan
        terraform show -json $(Pipeline.Workspace)/Output/terraform.tfplan >$(System.ArtifactsDirectory)/plan.json
        # Scan plan
        regula run $(System.ArtifactsDirectory)/plan.json -s high
      name: 'RegulaScan'
      displayName: 'Scan Terraform Plan with Regula'
    
    # Set pipeline output variable if there are changes
    - template: ../Steps/variable.yml
    
    # Publish artifact
    - template: ../Steps/artifact.yml
      parameters:
        artifact: 'Evaluate'